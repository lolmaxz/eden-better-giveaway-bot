datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

generator client {
  provider = "prisma-client-js"
}


///
/// MODELS
///

model Giveaway {
  id                Int       @id @default(autoincrement())
  guildId           String
  channelId         String
  messageId         String
  title             String
  description       String
  imageUrl          String?
  thumbnailUrl      String?   // URL for the thumbnail image
  prize             String
  whitelistRoles    String?   // Comma-separated role IDs
  extraEntryRoles   String?   // Comma-separated role IDs and their extra entries (JSON or custom format)
  startTime         DateTime
  endTime           DateTime
  isCompleted       Boolean   @default(false)
  winnerUserIds     String?  // Comma-separated user IDs
  winnerUsernames   String?  // Comma-separated usernames
  winnerDisplayNames String?  // Comma-separated display names
  startedByUserId   String
  startedByUsername String?
  startedByDisplayName String?
  entries           Entry[]
  useSupporterRoles  Boolean   @default(true)
  winnerCount        Int      @default(1)
}

model Entry {
  id          Int      @id @default(autoincrement())
  giveawayId  Int
  userId      String
  username    String
  displayName String
  entryTime   DateTime @default(now())
  extraEntries Int     @default(0)
  Giveaway    Giveaway @relation(fields: [giveawayId], references: [id])
}

model SupporterRole {
  id        Int    @id @default(autoincrement())
  guildId   String
  roleId    String
  extraEntries Int
}

model GuildConfig {
  guildId        String   @id
  allowedUserIds String?  // Comma-separated user IDs
  giveawayEmoji  String?  @default("ðŸŽ‰")
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}